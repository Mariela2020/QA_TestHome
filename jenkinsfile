pipeline {
    agent any

    stages{

            stage("Checkout"){
                steps {

                    git branch:'master', url:'https://github.com/Mariela2020/QA_TestHome.git'
                }
            }

            stage("Build"){
                steps{
                    script {
                        bat 'mvn clean'
                        //bat 'mvn test'
                        //bat 'clean package'
                    }

                }
            }

            stage("Deploy to Dynatrace") {
                steps {
                   script{
                      createDynatraceDeploymentEvent(
                          envId: 'dynatrace_demo',
                          tagMatchRules: [
                                [
                                  meTypes: [
                                           [meType: 'PROCESS_GROUP']
                                  ],
                                  tags: [
                                        [context: 'CONTEXTLESS', key: '', value: 'frontend']
                                  ]
                                ]
                                ])
                   }
                }
            }

            stage("Performance Test") {
                steps{
                      recordDynatraceSession(
                            entityIds: [[$class: 'Host',
                            entityId: 'HOST-C8F66629EC0197F4'],
                                      [$class: 'Application',
                            entityId: 'APPLICATION-16F69E5E7D1AECD0']],
                            envId: 'dynatrace_demo',
                                   tagMatchRules: [[meTypes: [[meType: 'PROCESS_GROUP']]]],
                                   testCase: 'loadtest') {
                            performanceTest (readFile ('performanceTest.json'))
                            }

                      perfSigDynatraceReports envId: 'dynatrace_demo', specFile : ' specfile.json ' , nonFunctionalFailure : 2
                }

            }

    }

}
